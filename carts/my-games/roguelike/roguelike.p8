pico-8 cartridge // http://www.pico-8.com
version 41
__lua__
function _init()
	_upd,_drw=update_game,draw_game
	
	--fading colors
	dpal={0,1,1,2,1,13,6,4,4,9,3,13,1,13,14}
	
	--universal info for mobs
	--1: player
	--2: slime
	--3: rat
	ani_sheet={
		{80,81,82,83},--1
		{112,113,114,115},--2
		{96,97,98,99}
	}
	atk_sheet={
		1,--1
		1,--2
		1,--3
	}
	hp_sheet={
		5,--1
		2,--2
		2,--3
	}
	--view distance for line of sight
	los_sheet={
		7,--1
		4,--2
		5,--2
	}
	
	items={
		{--1
			name="short dagger",
			type="weapon",
			atk=1,
		},
		{--2
			name="red potion",
			type="use",
			effect="heal",
			amount=1
		},
		{--3
			name="cloth armor",
			type="armor",
			min_def=0,
			max_def=1,
		},
		{--4
			name="kunai",
			type="throw",
			atk=1,
		},
		{--5
			name="rusty sword",
			type="weapon",
			atk=1,
		},
		{--6
			name="spiky bat",
			type="weapon",
			atk=2,
		},
		{--7
			name="knight armor",
			type="armor",
			min_def=2,
			max_def=3,
		},
		{--8
			name="red bean paste",
			type="use",
			effect="heal",
			amount=3
		}
	}
	
	mode="game"
	debugs={}
	start_game()
end

function _update()
	_upd()
	animate_all_mobs()
	do_hp_window()
	ani_float()
end

function _draw()
	_drw()
	draw_windows()
	checkfade()
end

function start_game()	
	--directions
	dirx,diry=
		{-1,1,0,0,1,1,-1,-1},{0,0,-1,1,-1,1,1,-1}
	
	--throw direction
	thrdir,thrx,thry=0,0,0
	
	--fading in
	fadeperc=1
	
	--inventory & equipments
	--eqp[1] - weapon, [2] - armor
	--inv[1-6] - inv
	inv,eqp={},{}
	inv_window={}
	stat_window={}
	max_inv=12
	take_item(items[1])
	take_item(items[5])
	take_item(items[6])
	take_item(items[2])
	take_item(items[3])
	take_item(items[7])
	take_item(items[4])
	take_item(items[8])
	
	--text windows
	windows={}
	dialog=nil
	floats={}
	hp_window=add_window(4,20,27,10,{})
	
	--mobs (including player)
	mobs={}
	mobs_can_move=false
	
	--player
	p={}
	p=add_mob(1,1,1)
	p.is_monster=false
	p.weapon=0
	p.armor=0
	
	for x=0,15 do
		for y=0,15 do
			if mget(x,y)==112 then
				add_mob(2,x,y)
				mset(x,y,1)
			elseif mget(x,y)==96 then
				add_mob(3,x,y)
				mset(x,y,1)
			end
		end
	end
	
	--fog of way:1 full of fog
	fogs=blank_map(0)
	unfog()
	
	--pathfinding distance map
	distmap=blank_map(-1)
	
	_upd,_drw=update_game,draw_game
end






-->8
-- gameplay
function move_mob(m,to_x,to_y)
	-- sprite flip
	m.flip=to_x==0 and m.flip or to_x<0
	-- collision detection
	if m.type==1 then
		move_p(m,to_x,to_y)
	else
		move_m(m,to_x,to_y)
	end
end

function move_p(m,to_x,to_y)
	local destx,desty=m.x+to_x,m.y+to_y
	local next_tile=check_next_tile(destx,desty)
	if next_tile=="floor" then
		m.x=destx
		m.y=desty
		bump_ani(m,to_x,to_y,8)
		mobs_can_move=true
		return
	elseif next_tile=="interact"
	or next_tile=="door" then
		local tile=mget(destx,desty)
		trig_bump(tile,destx,desty)
		mobs_can_move=true
	elseif next_tile.type then
		hit_mob(p,next_tile)
		mobs_can_move=true
		sfx(6)
	end
	bump_ani(m,to_x,to_y,-5)
end

function move_m(m,to_x,to_y)
	local destx,desty=m.x+to_x,m.y+to_y
	local next_tile=check_next_tile(destx,desty)
	if next_tile.type==1 then
		hit_mob(m,p)
		bump_ani(m,to_x,to_y,-5)
		sfx(7)
		return
	end
	m.x=destx
	m.y=desty
	bump_ani(m,to_x,to_y,8)
end

function bump_ani(o,x,y,dist)
	o.ox,o.oy=dist*x,dist*y
end

function trig_bump(tile,x,y)
	if tile==7 or tile==8 then
		-- vases
		mset(x,y,1)
		sfx(4)
	elseif tile==10 or tile==12 then
		-- chests
		mset(x,y,tile-1)
		sfx(2)
	elseif tile==13 then
		-- door
		mset(x,y,1)	
		sfx(1)
	elseif tile==6 and not dialog then
		--show_msg_timed("this is a longer one",30)
		show_msg({
			"welcome to the den!",
			"",
			"climb the tower",
			"and claim the bread!"
		})
	end
end

function throw()
	local index=inv_window.cur
	local item,tx,ty=inv[index],throw_tile()
	--
	if inbounds(tx,ty) then
		local m=get_mob(tx,ty)
		if m and item then
			if item.type=="use" then
				use_item(index,m)
			else
				sfx(6)
				hit_mob(item,m)
				m.flash=5
				trash_item(index)
			end
		end
	end
	bump_ani(p,thrx,thry,-8)
	mobs_can_move=true
	_upd=update_game
end

function throw_tile()
	local tx,ty=p.x,p.y
	
	repeat
		tx+=thrx
		ty+=thry
	until check_next_tile(tx,ty)!="floor" 
	return tx,ty
end

-->8
-- update
function update_game()
	checkend()
	-- textboxes
	if dialog and btnp(5) then
		dialog.dur=0
		dialog=nil
	elseif btnp(5) then
		show_inv(1)
	elseif btnp(üÖæÔ∏è) then
		take_item(items[1])
	elseif not dialog then
	--move mobs & player only when
	--no dialog showing on screen
		--player movement
		for i=0,3 do 
			if btnp(i) then
				sfx(0)
				move_mob(p,dirx[i+1],diry[i+1])
				unfog(p.x,p.y)
			end
		end
		for m in all(mobs) do
			--skip iteration if player
			if m.type==1 then goto continue end
			local l=los(m.x,m.y,p.x,p.y)
			if l then
				m.tar_x,m.tar_y=p.x,p.y
			end
			if m.task=="idle" then
				if l and dist(m.x,m.y,p.x,p.y)<m.los then
					add_float("!",m.x*8+2,m.y*8+4,10)
					m.task="atk"
					mobs_can_move=false
				end
			end
			if m.task=="atk" then
				if m.x==m.tar_x 
				and m.y==m.tar_y 
				and not l then
					m.task="idle"
					add_float("?",m.x*8+2,m.y*8+4,10)
				end
				calc_dist(m.tar_x,m.tar_y)
				if mobs_can_move then
					pathfinding(m)
				end
			end	
			::continue::
		end
		mobs_can_move=false
	end
end

function update_over()
	if btnp(‚ùé) then
		fadeout()
		reload()
		start_game()
	end
end

function update_inv()
	if btnp(4) then
		if curr_window==inv_window then
			_upd=update_game
			stat_window.dur=0
			inv_window.dur=0
		elseif curr_window==use_window then
			curr_window=inv_window
			use_window.dur=0
		end
	elseif btnp(5) then
		if curr_window==inv_window and inv_window.cur<free_inv_slot() then
			show_use_item()
		elseif curr_window==use_window then
			-- use window confirm
			local action=use_window.txt[use_window.cur]
			item_action(action)
		end
	end
	move_cursor(curr_window)
end

function move_cursor(w)
	if btnp(2) then
		w.cur-=1
	elseif btnp(3) then
		w.cur+=1
	end
	--cursor looping
	w.cur=(w.cur-1)%#w.txt+1
end

function update_stat()
	check_stat()
	stat_window.txt={
		"atk:"..p.atk.." ~ "..
		"def:"..p.min_def.."-"..p.max_def
	}
end

function update_throw()
	for i=0,3 do
		if (btnp(i)) thrdir=i
	end
	thrx,thry=dirx[thrdir+1],diry[thrdir+1]
	
	if btnp(4) then
		_upd=update_game
	elseif btnp(5) then
		throw()
	end
end
-->8
--draw
function draw_game()
	cls()
	map()
	
	--draw mobs, incl. player
	for i=#mobs,1,-1 do
		palt(0,false)
		draw_spr(mobs[i])
	end
	
	if _upd==update_throw then
		local tx,ty=throw_tile()
		local x1,y1,x2,y2=p.x*8+3+thrx*6,p.y*8+3+thry*6,
			mid(tx*8+3,127),mid(ty*8+3,127)
		line(x1+thry,y1+thrx,x2+thry,y2+thrx,0)
		line(x1-thry,y1-thrx,x2-thry,y2-thrx,0)
		fillp(0b0101101001011010)
		if sin(time())>0 then
			fillp(0b1010010110100101)
		end
		line(x1,y1,x2,y2,10)
		fillp()
		out_print("+",x2-1,y2-2,0,10)
	end
	
	--floating text boxes
	for f in all(floats) do
		out_print(f.txt,f.x,f.y,0,f.c)
	end
	
	--fog of war
	for x=0,15 do
		for y=0,15 do
			if fogs[x][y]==1 then
				rectfill(x*8,y*8,x*8+7,y*8+7,0)
			end
		end
	end
	
	for i=1,#debugs do
		print(debugs[i],100,3+i*7,7)
	end
end

function draw_spr(o)
	if o.flash>0 then
		o.flash-=1
		pal(10,7)
		pal(14,7)
	end
	spr(o.spr,o.x*8-o.ox,o.y*8-o.oy,1,1,o.flip)
	pal()
end

function out_print(txt,x,y,out_c,t_c)
	for i=1,8 do
		print(txt,x+dirx[i],y+diry[i],out_c)
	end
	print(txt,x,y,t_c)
end

function draw_over()
	draw_game()
end
-->8
-- ui
function add_window(x,y,w,h,txt)
	local w={x=x,y=y,w=w,h=h,txt=txt}
	add(windows,w)
	return w
end

function draw_windows()
	for w in all(windows) do
		local wx,wy,ww,wh=w.x,w.y,w.w,w.h
		rectfill(wx-1,wy-1,wx+ww+1,wy+wh+1,0)
		rect(wx,wy,wx+ww,wy+wh,6)
		wx+=4
		wy+=2
		clip(wx, wy, ww, wh)
		if w.cur then
			wx+=6
		end
		
		local txt_c={}
		for i, txt in ipairs(w.txt) do
   local ox=wx
   add(txt_c,w.col and w.col[i] or 6)
   if w.cur==i
   and w==curr_window then
    spr(255,ox-4+sin(2*time()),wy+(i-1)*6)
   end
   if w==inv_window 
   and (p.weapon==i or p.armor==i) then
    spr(p.weapon==i and 254 or 253,ox-2,wy+(i-1)*6)
   	ox=wx+7
   end
   print(txt,ox,wy+1+(i-1)*6,txt_c[i])
  end
		clip()
		--timed and closed windows
		if w.dur then
			w.dur-=1
			if w.dur<=0 then
				w.h*=0.5
				if w.h<1 then
					del(windows,w)
				end
			end
		else
			if w.btn then
				out_print("‚ùé",wx+ww-13,wy+wh-4+sin(time()*2),0,6)
			end
		end
	end
end

function show_msg_timed(txt,dur)
	local w_w=(#txt+2)*4
	local w=add_window(64,64,w_w,11,{txt})
	w.dur=dur
end

function show_msg(txt)
	dialog=add_window(14,50,100,#txt*6+5,txt)
	dialog.btn=true
end

function add_float(t,x,y,c)
	add(floats,{
		txt=t,
		x=x,
		y=y,
		ty=y-10,
		dur=0,
		c=c
	})
end

function ani_float()
	for f in all(floats) do
		f.y+=(f.ty-f.y)/5
		f.dur+=1
		if f.dur>30 then
			del(floats,f)
		end
	end
end

function dofade()
 local p,kmax,col,k=flr(mid(0,fadeperc,1)*100)
 for j=1,15 do
  col=j
  kmax=flr((p+j*1.46)/22)
  for k=1,kmax do
   col=dpal[col]
  end
  pal(j,col,1)
 end
end

function checkfade()
	if fadeperc>0 then
		fadeperc=max(fadeperc-0.04,0)
		dofade()
	end
end

function do_hp_window()
	hp_window.txt[1]="‚ô•"..p.hp.."/"..p.max_hp
	local hp_y=4
	if p.y<8 then
		hp_y=113
	end
	hp_window.y+=(hp_y-hp_window.y)/5
end
-->8
-- tools
function animate_all_mobs()
	for m in all(mobs) do
		m.spr+=m.ani_spd
		if flr(m.spr)>m.sheet[#m.sheet] then
			m.spr=m.sheet[1]
		end
		m.ox*=0.7
		m.oy*=0.7
	end
end

function get_mob(x,y)
	for m in all(mobs) do
		if m.x==x and m.y==y then
			return m
		end
	end
	return "floor"
end

function check_next_tile(x,y)
	local tile=mget(x,y)
	local mob=get_mob(x,y)
	local next_tile="floor"
	if not inbounds(x,y) then
		--cannot walk out of bounds
		next_tile="outbound"
	elseif fget(tile,0) then
		--cannot walk through flag 0
		next_tile="wall"
	elseif fget(tile,1) then
		--interactable
		next_tile="interact"
	elseif fget(tile,2) then
		--doors
		next_tile="door"
	else
		--cannot walk through mobs
		next_tile=mob
	end
	return next_tile
end

function inbounds(x,y)
	return not (x<0 or y<0 or x>15 or y>15)
end

function dist(ax,ay,bx,by)
	local dx,dy=(bx-ax),(by-ay)
	return sqrt(dx*dx+dy*dy)
end

function checkend()
	if p.hp<=0 then
		_upd=update_over
		_drw=draw_over
		windows={}
		show_msg({
			"your are dead!",
			"",
			"try again?"
		})
	end
end

function fadeout(spd,_wait)
 local spd=spd or 0.04
 local _wait=_wait or 0
 repeat
  fadeperc=min(fadeperc+spd,1)
  dofade()
  flip()
 until fadeperc==1
 repeat
		_wait-=1
		flip()
	until _wait<0
end

function can_see(x,y)
	local tle=check_next_tile(x,y)
	return tle!="outbound" 
	and tle!="wall"
	and tle!="door"
end

function los(x1,y1,x2,y2,mode)
 local frst,sx,sy,dx,dy=true
 --‚òÖ
 if dist(x1,y1,x2,y2)==1 then return true end
 if x1<x2 then
  sx,dx=1,x2-x1
 else
  sx,dx=-1,x1-x2
 end
 if y1<y2 then
  sy,dy=1,y2-y1
 else
  sy,dy=-1,y1-y2
 end
 local err,e2=dx-dy
 
 while not(x1==x2 and y1==y2) do
  if not frst 
  and not can_see(x1,y1)
  then return false end
  frst=false
  e2=err+err
  if e2>-dy then
   err-=dy
   x1+=sx
  end
  if e2<dx then
   err+=dx
   y1+=sy
  end
 end
 return true 
end

function blank_map(_default)
	local ret={}
	local _default=_default or 1
	
	for x=0,15 do
		ret[x]={}
		for y=0,15 do
			ret[x][y]=_default
		end
	end
	return ret
end

function unfog()
	local px,py=p.x,p.y
	for i=0,15 do
		for j=0,15 do
			if dist(px,py,i,j)<=p.los and los(px,py,i,j) then
				unfog_neighbors(i,j)
			end
		end
	end
end

function unfog_neighbors(x,y)
	fogs[x][y]=0
	for i=1,4 do
		local tx,ty=x+dirx[i],y+diry[i]
		if inbounds(tx,ty)
		and not can_see(tx,ty) then
			fogs[tx][ty]=0.5
		end
	end
end

function calc_dist(tx,ty)
	--cand: candidates
	local cand,step={},0
	distmap=blank_map(-1)
	distmap[tx][ty]=0
	add(cand,{x=tx,y=ty})
	repeat 
		step+=1
		candnew={}
		for c in all(cand) do
			--starting step = 0
			for d=1,4 do
				local dx,dy=c.x+dirx[d],c.y+diry[d]
				if inbounds(dx,dy) 
				and distmap[dx][dy]==-1 
				then
					distmap[dx][dy]=step
					if mget(dx,dy)==1 then
						add(candnew,{x=dx,y=dy})
					end
				end
			end
		end
		cand=candnew
	until #cand==0
end

function show_inv(cur)
	local txt,col,item,eqp_txt={},{}
	_upd=update_inv
	for i=1,max_inv do
		item=inv[i]
		if item then
			add(txt,item.name)
			add(col,7)
		else
			add(txt,"...")
			add(col,5)
		end
	end
	inv_window=add_window(6,20,84,76,txt)
	inv_window.cur=cur
	inv_window.col=col
	
	stat_window=add_window(6,8,84,10,
	{})
	update_stat()
	curr_window=inv_window
end

function show_use_item()
 local index=inv_window.cur
 local item=inv[index]
 local t,txt=item.type,{}
 if t=="weapon" or t=="armor" then
  if index!=p.weapon and index!= p.armor then add(txt,"equip")
  else add(txt, "unequip") end
 end
 if t=="use" then add(txt, "use") end
 if t=="throw" or t=="use" then add(txt,"throw") end
 add(txt, "trash")
 use_window=add_window(87,index*6+17,40,#txt*7+2,txt)
 use_window.cur=1
 curr_window=use_window
end

function check_stat()
 local w, a = p.weapon, p.armor
 p.atk = p.base_atk + (w ~= 0 and inv[w] and inv[w].atk or 0)
 p.min_def = p.base_def
 p.max_def = p.base_def
 if a ~= 0 and inv[a] then
  p.min_def = p.min_def + inv[a].min_def
  p.max_def = p.max_def + inv[a].max_def
 end
end
-->8
--mobs and items
function add_mob(t,x,y)
	local m={
		--is monster or not
		is_monster=true,
		
		--movement
		x=x,
		y=y,
		
		--animation
		type=t,
		sheet=ani_sheet[t],
		spr=ani_sheet[t][1],
		ani_spd=0.25,
		flip=false,
		ox=0,
		oy=0,
		flash=0,
		
		--combat
		max_hp=hp_sheet[t],
		hp=hp_sheet[t],
		base_atk=atk_sheet[t],
		atk=atk_sheet[t],
		base_def=0,
		min_def=0,
		max_def=0,
		tar_x=x,
		tar_y=y,
		task="idle",
		
		--path finding & line of sight
		dist=0,
		los=los_sheet[t]
	}
	add(mobs,m)
	return m
end

function pathfinding(m)
	if p=={} then return end
	if m.type!=1 then
		--best distance,x,y
		local bd,bx,by=999,0,0
		for i=1,4 do
			--check if making 1 more move,
			--will be closer to player
			local dx,dy=dirx[i],diry[i]
			local to_x,to_y=m.x+dx,m.y+dy
			local next_tile=check_next_tile(to_x,to_y)
			if next_tile=="floor"	then
				local mob=get_mob(to_x,to_y)
				local d=distmap[to_x][to_y]+rnd()
				if d<=bd and 
					not mob.is_monster then
					bd,bx,by=d,dx,dy
				end
			end
		end
		move_m(m,bx,by)
	end
end

function hit_mob(atk,def)
	local dmg=max(atk.atk-rnd({def.min_def,def.max_def}),0)
	def.flash=5
	add_float("-"..dmg,def.x*8,def.y*8+2,9)
	def.hp-=dmg
	if def.hp<=0 then
		del(mobs,def)
	end
end

function heal_mob(target,amount)
	local hp=min(target.max_hp-target.hp,amount)
	add_float("+"..hp,target.x*8,target.y*8+2,10)
	target.hp+=hp
	target.flash=5
end

----------------------------
--items
function take_item(item)
	local i=free_inv_slot()
	if i==0 then return false end
	inv[i]=item
	return true
end

function free_inv_slot()
	for i=1,max_inv do
		if not inv[i] then
			return i
		end
	end
	return 0
end

function item_action(act)
	local index=inv_window.cur
	local item=inv[index]
	if act=="trash" then
		trash_item(index)
	elseif act=="equip" then
		toggle_equip(index)
	elseif act=="unequip" then
		toggle_equip(index)
	elseif act=="use" then
		use_item(index,p)
		_upd=update_game
		stat_window.dur=0
		inv_window.dur=0
	elseif act=="throw" then
		_upd=update_throw
		stat_window.dur=0
		inv_window.dur=0
	end
	curr_window.dur=0
	curr_window=inv_window
	use_window.dur=0
	update_stat()
end

function toggle_equip(index)
	local item=inv[index]
	if item.type=="weapon" then
		p.weapon=p.weapon==index and 0 or index
	elseif item.type=="armor" then
		p.armor=p.armor==index and 0 or index
	end
end

function trash_item(index)
 del(inv, inv[index])
 if index==p.weapon then
  p.weapon=0
 elseif index<p.weapon then
  p.weapon-=1
 end
 if index==p.armor then
  p.armor=0
 elseif index<p.armor then
  p.armor-=1
 end
 del(inv_window.txt,inv_window.txt[index])
 add(inv_window.txt,"...")
 inv_window.col[#inv+1] = 5
end

function use_item(index,target)
	
	local item=inv[index]
		local effect=item.effect
	if effect=="heal" then
		heal_mob(target,item.amount)
	elseif effect=="poison" then
		
	end
	trash_item(index)
	mobs_can_move=true
end
__gfx__
0000000000000000606660600000000000000000000000000aaaaaa00000000000aaa00000000000000000000000000000aaa000a0aaa0a0aa000000ddddddd0
000000000000000000000000000000000000000000000000aaaaaaaa00aaa0000a000a00000000000000000066666660a0aaa0a000000000aa0aa00000000000
000000000000000066606660000000000000000000000000a000000a0a000a000a000a00066666600a0aa0a060000060a00000a0a0aaa0a0aa0aa0a0dd000000
00000000000000000000000000000000000000000000000000aa0a0000aaa000a0aaa0a0060000600a0000a060000060a00a00a000aaa000000aa0a0dd0dd000
000000000000000060666060000000000000000000000000a000000a0a00aa00aa00aaa0066666600aaaaaa066666660aaa0aaa0a0aaa0a0aa0000a0dd0dd0d0
00000000000d000000000000000000000000000000000000a0a0aa0a0aaaaa00aaaaaaa00000000000000000000000000000000000aaa000aa0aa000dd0dd0d0
000000000000000066606660000000000000000000000000a000000a00aaa0000aaaaa00066666600aaaaaa066666660aaaaaaa0a0aaa0a0aa0aa0a0dd0dd0d0
000000000000000000000000000000000000000000000000aaaaaaaa0000000000aaa00000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000a0a00000000000000a0a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000a0a000aaaa000000a0a0000aaaa00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00aaaa0000a0aaa000aaaa00000a0aaa000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000a0aaa00aaaaa0000a0aaa000aaaaa000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0a0aaaaa0a000000000aaaaa0a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
aa000000aa0aa0000aa00000aa0aaa00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
aa0aaa0aaa0aa0000aa0aa00aa0aaa0a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00a00a0000aa000000a00a00000aa000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000a000a00000000000a000a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00a000a000aaaaa000a000a000aaaaa0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00aaaaa000aa000000aaaaa000aa0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00aa0000000aa0a000aa0000000aa0a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0a0aa0a00a000000000aa0a00a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
aa000000aa0aa0000aa00000aa0aaa00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
aa0aaa0aaa0aa0000aa0aa00aa0aaa0a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00a00a0000aa000000a00a00000aa000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000aa000aa0aa000aa000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000aa000aa0aa000aa000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
aa000aa000aaaa0000aaaa00aa000aa0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
aaaaaa0000a0a0a000a0a0a0aaaaaa00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00a0a0a000aaaaaa00aaaaaa00a0a0a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00aaaaaa00aaa00000aaa00000aaaaaa000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00aaa0000aaaa000000aa00000aaa000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0aaaaa000000aa00000aa0000aaaaa00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000aaa000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00aaa0000000000000aaa0000a0aaa00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0a0aaa000aaaaaa00a0aaa000a0aaa00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
a0aaaaa0a00aaaaaa0aaaaa00aaaaa00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
aaaaaaa0aaaaaaaaaaaaaaa00aaaaa00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0aaaaa000aaaaaa00aaaaa0000aaa000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000aa00aa0000a00070000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000aaaaaa0000a00077000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000aaaa00000a00077700000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000aaaa0000aaa0077000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000aaaa00000a00070000000
__gff__
0000010000000202020102010204020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0202060202020202020202020202020200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
060f010101010101010101020202020200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
02020d0202020202020201020202020200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0201010101020101010201020201010200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0201010101070170010201020201010200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0201010101020102020201020201010200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0201010101020101010101020201010200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
02020d0202020202020202020201010200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0201010101010202020202020201010200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
02020202020d0202020202020202020200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0201010101010101010101010101010200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0201010101010101010101010101010200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
02010a0101010101010101010101010200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0201010101010101010101010101010200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0201010101010101010101010101010200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0202020202020202020202020202020200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
00010000077300a730077300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00010000260502a06022040140300a020080100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00020000180501b0501b05018040170303a0303a0203a0202e010270102b010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000100001c0501b05017050170502a22027220212201d2101a2101821015210122100f2100d2100b2100921008210082100721007210072100720007200072000720007200072000720007200072000720007200
00010000235502a5502f5502f550000000000000000000002654027540295402a5400000000000000002853028530285300000000000000002852028520275202752000000000000000000000000000000000000
000100002705027050270500f00011000160001b000180501805018050130001d0002b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
9d010000166220652206522116220f6120a6120a65207652056520105200602006020060200602006020060200602006020060200602006020060200602006020060200602006020060200602006020060200602
000100001a1301a13011130241300b130091300913013130001000f120001000a1200010000100001000411000100001000010000100001000010000100001000010000100001000010000100001000010000100
